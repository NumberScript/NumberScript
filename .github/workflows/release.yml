name: Manual Release VS Code Extension

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true
        default: 'patch'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.19.5

      - name: Install dependencies
        run: npm ci

      - name: Bump version
        id: version
        run: |
          VERSION_INPUT="${{ github.event.inputs.version }}"
          echo "Bumping version to $VERSION_INPUT"
          npm version $VERSION_INPUT --no-git-tag-version
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Generate patch notes
        id: notes
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 || echo "")
          if [ -z "$LAST_TAG" ]; then
            git log --pretty=format:'- %s' > CHANGELOG.md
          else
            git log $LAST_TAG..HEAD --pretty=format:'- %s' > CHANGELOG.md
          fi
          PATCH_NOTES=$(cat CHANGELOG.md)
          echo "PATCH_NOTES<<EOF" >> $GITHUB_ENV
          echo "$PATCH_NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Build extension
        run: npm run build

      - name: Package extension
        run: npx @vscode/vsce package

      - name: Publish to VS Code Marketplace
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: npx @vscode/vsce publish -p $VSCE_PAT --packagePath *.vsix --notes "$PATCH_NOTES"

      - name: Publish to Open VSX
        env:
          OPENVSX_TOKEN: ${{ secrets.OPENVSX_TOKEN }}
        run: npx ovsx publish --pat $OPENVSX_TOKEN --packagePath *.vsix --releaseNotes "$PATCH_NOTES"
